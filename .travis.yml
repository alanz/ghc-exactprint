# NB: don't set `language: haskell` here

# See also https://github.com/hvr/multi-ghc-travis for more information
env:
 - CABALVER=1.22 GHCVER=7.10.1


# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$PATH
 - travis_retry cabal update
 - cabal install hpc-coveralls

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under
# test; any command which exits with a non-zero exit code causes the
# build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure --enable-coverage --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 # - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
 #   cd dist/;
 #   if [ -f "$SRC_TGZ" ]; then
 #      cabal install --force-reinstalls "$SRC_TGZ";
 #   else
 #      echo "expected '$SRC_TGZ' not found";
 #      exit 1;

after_script:
 - hpc-coveralls test

notifications:
  irc: "irc.freenode.org#haskell-refactorer"

# EOF
